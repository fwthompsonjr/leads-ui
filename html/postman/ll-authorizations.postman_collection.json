{
	"info": {
		"_postman_id": "072b2e04-7e21-4571-9b94-d1d263d84117",
		"name": "ll-authorizations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30065647"
	},
	"item": [
		{
			"name": "application",
			"item": [
				{
					"name": "ReadMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{app_url}}/{{APP_README_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"{{APP_README_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{app_url}}/{{APP_LIST_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"{{APP_LIST_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{DefaultUserName}}\",\r\n  \"password\": \"{{DefaultPassword}}\",\r\n  \"email\": \"{{DefaultEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/{{APP_REGISTER_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"{{APP_REGISTER_URL}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "lists",
			"item": [
				{
					"name": "GetStateDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect 1 active state response\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring.length).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect TX as active state code\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.find(x => x[\"shortName\"] == 'TX');\r",
									"    pm.expect(found).not.eq(undefined);\r",
									"    pm.expect(found).not.eq(null);\r",
									"    pm.expect(found[\"isActive\"]).eq(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect Texas as active state name\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.find(x => x[\"name\"] == 'Texas');\r",
									"    pm.expect(found).not.eq(undefined);\r",
									"    pm.expect(found).not.eq(null);\r",
									"    pm.expect(found[\"isActive\"]).eq(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/api/Lists/us-state-list",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Lists",
								"us-state-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCountyDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect 3 active counties response\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring.length).to.equal(3);\r",
									"});\r",
									"pm.test(\"Expect TX as active state code\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.filter(x => x[\"stateCode\"] == 'TX');    \r",
									"    pm.expect(found.length).to.equal(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect Collin as active county name\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.find(x => x[\"name\"] == 'Collin' && x[\"stateCode\"] == 'TX');\r",
									"    pm.expect(found).not.eq(undefined);\r",
									"    pm.expect(found).not.eq(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect Denton as active county name\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.find(x => x[\"name\"] == 'Denton' && x[\"stateCode\"] == 'TX');\r",
									"    pm.expect(found).not.eq(undefined);\r",
									"    pm.expect(found).not.eq(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect Tarrant as active county name\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    var found = jstring.find(x => x[\"name\"] == 'Tarrant' && x[\"stateCode\"] == 'TX');\r",
									"    pm.expect(found).not.eq(undefined);\r",
									"    pm.expect(found).not.eq(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var basurl = pm.collectionVariables.get('BaseUrl');\r",
									"var target = \"\".concat(basurl, \"/api/Account/login\");\r",
									"var uid = pm.collectionVariables.get('DefaultUserName');\r",
									"var pwd = pm.collectionVariables.get('DefaultPassword');\r",
									"var appid = pm.collectionVariables.get('LocalAppHeader');\r",
									"var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });\r",
									"pm.sendRequest({\r",
									"url: target,\r",
									"method: 'POST',\r",
									"header: { \r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"APP_IDENTITY\": appid},\r",
									"body: { \r",
									"    mode: 'raw',\r",
									"    raw: payload\r",
									"    }\r",
									"},\r",
									"function (err, response) {  \r",
									"    var jstring = response.json();\r",
									"    var atoken = jstring[\"accessToken\"];\r",
									"    var rtoken = jstring[\"refreshToken\"];\r",
									"    pm.environment.set(\"access_token\", atoken);\r",
									"    pm.environment.set(\"refresh_token\", rtoken);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/api/Lists/us-county-list",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Lists",
								"us-county-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPermissionGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect 5 active permissions response\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring.length).to.equal(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var basurl = pm.collectionVariables.get('BaseUrl');\r",
									"var target = \"\".concat(basurl, \"/api/Account/login\");\r",
									"var uid = pm.collectionVariables.get('DefaultUserName');\r",
									"var pwd = pm.collectionVariables.get('DefaultPassword');\r",
									"var appid = pm.collectionVariables.get('LocalAppHeader');\r",
									"var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });\r",
									"pm.sendRequest({\r",
									"url: target,\r",
									"method: 'POST',\r",
									"header: { \r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"APP_IDENTITY\": appid},\r",
									"body: { \r",
									"    mode: 'raw',\r",
									"    raw: payload\r",
									"    }\r",
									"},\r",
									"function (err, response) {  \r",
									"    var jstring = response.json();\r",
									"    var atoken = jstring[\"accessToken\"];\r",
									"    var rtoken = jstring[\"refreshToken\"];\r",
									"    pm.environment.set(\"access_token\", atoken);\r",
									"    pm.environment.set(\"refresh_token\", rtoken);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/api/Lists/permission-groups",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Lists",
								"permission-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect 17 active permissions response\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring.length).to.equal(17);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var basurl = pm.collectionVariables.get('BaseUrl');\r",
									"var target = \"\".concat(basurl, \"/api/Account/login\");\r",
									"var uid = pm.collectionVariables.get('DefaultUserName');\r",
									"var pwd = pm.collectionVariables.get('DefaultPassword');\r",
									"var appid = pm.collectionVariables.get('LocalAppHeader');\r",
									"var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });\r",
									"pm.sendRequest({\r",
									"url: target,\r",
									"method: 'POST',\r",
									"header: { \r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"APP_IDENTITY\": appid},\r",
									"body: { \r",
									"    mode: 'raw',\r",
									"    raw: payload\r",
									"    }\r",
									"},\r",
									"function (err, response) {  \r",
									"    var jstring = response.json();\r",
									"    var atoken = jstring[\"accessToken\"];\r",
									"    var rtoken = jstring[\"refreshToken\"];\r",
									"    pm.environment.set(\"access_token\", atoken);\r",
									"    pm.environment.set(\"refresh_token\", rtoken);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/api/Lists/user-profile",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Lists",
								"user-profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserPermissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Expect 14 active permissions response\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring.length).to.equal(14);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var basurl = pm.collectionVariables.get('BaseUrl');\r",
									"var target = \"\".concat(basurl, \"/api/Account/login\");\r",
									"var uid = pm.collectionVariables.get('DefaultUserName');\r",
									"var pwd = pm.collectionVariables.get('DefaultPassword');\r",
									"var appid = pm.collectionVariables.get('LocalAppHeader');\r",
									"var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });\r",
									"pm.sendRequest({\r",
									"url: target,\r",
									"method: 'POST',\r",
									"header: { \r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"APP_IDENTITY\": appid},\r",
									"body: { \r",
									"    mode: 'raw',\r",
									"    raw: payload\r",
									"    }\r",
									"},\r",
									"function (err, response) {  \r",
									"    var jstring = response.json();\r",
									"    var atoken = jstring[\"accessToken\"];\r",
									"    var rtoken = jstring[\"refreshToken\"];\r",
									"    pm.environment.set(\"access_token\", atoken);\r",
									"    pm.environment.set(\"refresh_token\", rtoken);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{LocalAppHeader}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/api/Lists/user-permissions",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Lists",
								"user-permissions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "permissions",
			"item": [
				{
					"name": "SetPermissionLevel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var expectedValue = \"Group settings for 'Guest' applied to user: test.account.\";\r",
									"var expectedKey = true;\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Group setting message should match\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring[\"value\"]).to.equal(expectedValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Group setting key should be true\", function () {\r",
									"    var jstring = pm.response.json();\r",
									"    pm.expect(jstring[\"key\"]).to.equal(expectedKey);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var basurl = pm.collectionVariables.get('BaseUrl');\r",
									"var target = \"\".concat(basurl, \"/api/Account/login\");\r",
									"var uid = pm.collectionVariables.get('DefaultUserName');\r",
									"var pwd = pm.collectionVariables.get('DefaultPassword');\r",
									"var appid = pm.collectionVariables.get('LocalAppHeader');\r",
									"var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });\r",
									"pm.sendRequest({\r",
									"url: target,\r",
									"method: 'POST',\r",
									"header: { \r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"APP_IDENTITY\": appid},\r",
									"body: { \r",
									"    mode: 'raw',\r",
									"    raw: payload\r",
									"    }\r",
									"},\r",
									"function (err, response) {  \r",
									"    var jstring = response.json();\r",
									"    var atoken = jstring[\"accessToken\"];\r",
									"    var rtoken = jstring[\"refreshToken\"];\r",
									"    pm.environment.set(\"access_token\", atoken);\r",
									"    pm.environment.set(\"refresh_token\", rtoken);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{LocalAppHeader}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Level\": \"Guest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/Permissions/set-permission",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"Permissions",
								"set-permission"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "home",
			"item": [
				{
					"name": "Index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{app_url}}/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "signon",
			"item": [
				{
					"name": "Login By UserName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{DefaultUserName}}\",\r\n  \"password\": \"{{DefaultPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_LOGIN_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_LOGIN_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login By Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{DefaultEmail}}\",\r\n  \"password\": \"{{DefaultPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_LOGIN_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_LOGIN_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh By Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accessToken\": \"{{access_token}}\",\r\n  \"refreshToken\": \"{{refresh_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_REFRESH_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_REFRESH_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh By UserName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accessToken\": \"{{access_token}}\",\r\n  \"refreshToken\": \"{{refresh_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_REFRESH_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_REFRESH_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify By Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accessToken\": \"{{access_token}}\",\r\n  \"refreshToken\": \"{{refresh_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_VERIFY_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_VERIFY_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify By UserName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accessToken\": \"{{access_token}}\",\r\n  \"refreshToken\": \"{{refresh_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_VERIFY_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_VERIFY_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "APP_IDENTITY",
								"value": "{{app_identity}}",
								"description": "App service header",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{DefaultUserName}}\",\r\n  \"oldPassword\": \"{{DefaultPassword}}\",\r\n  \"newPassword\": \"{{DefaultPassword}}\",\r\n  \"confirmPassword\": \"{{DefaultPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{app_url}}/api/{{SIGNON_CHANGE_PASSWORD_URL}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"api",
								"{{SIGNON_CHANGE_PASSWORD_URL}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "profile",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var useLocal = getEnviromentSetting( \"UseLocalInstance\", pm.collectionVariables.get('UseLocal'));",
					"var isLocal = useLocal == 'True';",
					"var basurl = isLocal ? pm.collectionVariables.get('LocalUrl') : pm.collectionVariables.get('BaseUrl');",
					"pm.environment.set(\"app_url\", basurl);",
					"const emptyGuid = '00000000-0000-0000-0000-000000000000';",
					"const defaultApplicationName = 'legallead.permissions.api';",
					"var locationNames = pm.execution.location;",
					"var folderName = locationNames[1];",
					"var systemUnderTest = locationNames.join(' | ');",
					"console.log(systemUnderTest);",
					"",
					"function getEnviromentSetting( name, fallback ) {",
					"    try {",
					"        var envalue = pm.environment[name];",
					"        if (undefined === envalue || null === envalue || String(envalue).length === 0) { return fallback; }",
					"        return String(envalue);",
					"    } catch {",
					"        return fallback;",
					"    }",
					"}",
					"",
					"function getAppId() {",
					"    try {            ",
					"        var target = \"\".concat(basurl, \"/api/application/apps\");",
					"        pm.sendRequest({",
					"        url: target,",
					"        method: 'GET',",
					"        header: { ",
					"            \"Content-Type\": \"application/json\"",
					"            }",
					"        },",
					"        function (err, response) {  ",
					"            var jstring = response.json();",
					"            var jsfirst = jstring[0];",
					"            var indx = jsfirst[\"id\"];",
					"            var name = jsfirst[\"name\"];",
					"            var payload = JSON.stringify({ \"id\": indx, \"name\": name });",
					"            pm.environment.set(\"app_identity\", payload);",
					"            });",
					"    } catch {",
					"        var dfpayload = JSON.stringify({ \"id\": emptyGuid, \"name\": defaultApplicationName });",
					"        pm.environment.set(\"app_identity\", dfpayload);",
					"    }",
					"}",
					"function doLogin() {",
					"    try {",
					"        var target = \"\".concat(basurl, \"/api/account/login\");",
					"        var uid = pm.collectionVariables.get('DefaultUserName');",
					"        var pwd = pm.collectionVariables.get('DefaultPassword');",
					"        var appid = pm.environment.get(\"app_identity\");",
					"        var payload = JSON.stringify({ \"userName\": uid, \"password\": pwd });",
					"            ",
					"        pm.sendRequest({",
					"        url: target,",
					"        method: 'POST',",
					"        header: { ",
					"            \"Content-Type\": \"application/json\",",
					"            \"APP_IDENTITY\": appid},",
					"        body: { ",
					"            mode: 'raw',",
					"            raw: payload",
					"            }",
					"        },",
					"        function (err, response) {  ",
					"            var jstring = response.json();",
					"            var atoken = jstring[\"accessToken\"];",
					"            var rtoken = jstring[\"refreshToken\"];",
					"            pm.environment.set(\"access_token\", atoken);",
					"            pm.environment.set(\"refresh_token\", rtoken);",
					"            });",
					"    } catch (error) {",
					"        console.debug(error);",
					"    }",
					"}",
					"",
					"function execPreRequest() {",
					"    try {",
					"        getAppId();",
					"        if (folderName == \"application\") { return; }",
					"        if (folderName == \"home\") { return; }",
					"        doLogin();",
					"    } catch {",
					"",
					"    }",
					"}",
					"",
					"execPreRequest();"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "http://legalleadpermissionsapi-dev.eba-kfe2pqda.us-east-1.elasticbeanstalk.com",
			"type": "string"
		},
		{
			"key": "UseLocal",
			"value": "False",
			"type": "string"
		},
		{
			"key": "LocalUrl",
			"value": "https://localhost:44360",
			"type": "string"
		},
		{
			"key": "DefaultPassword",
			"value": "1234-AbcD4321",
			"type": "string"
		},
		{
			"key": "DefaultUserName",
			"value": "test.account",
			"type": "string"
		},
		{
			"key": "DefaultEmail",
			"value": "user@example.com",
			"type": "string"
		},
		{
			"key": "LocalAppHeader",
			"value": "{ \"id\": \"eb642eb3-6cdf-4e95-b329-a1c760c4eb54\",  \"name\": \"legallead.permissions.api\" }",
			"type": "string"
		},
		{
			"key": "SIGNON_LOGIN_URL",
			"value": "signon/login",
			"type": "string"
		},
		{
			"key": "SIGNON_REFRESH_URL",
			"value": "signon/refresh-token",
			"type": "string"
		},
		{
			"key": "SIGNON_VERIFY_URL",
			"value": "signon/verify-token",
			"type": "string"
		},
		{
			"key": "SIGNON_CHANGE_PASSWORD_URL",
			"value": "signon/change-password",
			"type": "string"
		},
		{
			"key": "APP_README_URL",
			"value": "api/application/read-me"
		},
		{
			"key": "APP_LIST_URL",
			"value": "api/application/apps"
		},
		{
			"key": "APP_REGISTER_URL",
			"value": "api/application/register"
		}
	]
}