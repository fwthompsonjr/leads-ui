using System.Text;

namespace legallead.resources
{
    public static class ResourceText
    {
        public static string Text()
        {
            const string tilde = "~";
            var quote = '"'.ToString();
            var sb = new StringBuilder();
            sb.AppendLine("{".Replace(tilde, quote));
            sb.AppendLine("  ~resources~: [".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~RowIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~rowIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FindDefendant~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Applicant~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Applicant~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 100,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 10".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~th-contains-text~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~//th[contains(text(),'{0}')]~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 110,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~parent-element~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~..~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 120,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~th-element~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~th~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 130,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~inner-text~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~innerText~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 140,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~tr-element~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~tr~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 150,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~br-element-tag~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~<br/>~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 160,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FindDefendant~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Defendant~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Defendant~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 170,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 10".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~td-element~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~td~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 180,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~hlink-uri~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~hlinkUri~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 190,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PersonNodeXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~personNodeXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 200,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~startDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 210,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~EndDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~endDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 220,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CriminalCaseInclusion~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~criminalCaseInclusion~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 230,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseStyle~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~CaseStyle~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 240,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetText~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~set-text~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 250,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DateTimeShort~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~MM/dd/yyyy~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 260,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchComboIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~SearchComboIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 270,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseSearchType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~CaseSearchType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 280,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DistrictSearchType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~DistrictSearchType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 290,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartDateQuery~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~?StartDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 300,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~EndingDateQuery~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~?EndingDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 310,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetComboIndexQuery~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~?SetComboIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 320,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CriminalLinkQuery~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~criminalLinkQuery~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 330,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchingForElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Searching for element: {0}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 340,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Searching for element: {0}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 350,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetSelectElementIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Setting SELECT index for element: {0} to {1}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 360,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetSelectOptionIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Setting OPTION : {0} ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 370,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~WaitingForElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Waiting for element: {0}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 380,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementTextNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Element {0}: expected text '{1}' not found.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 390,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementMatchTextNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Element {0}: expected text '{1}' not matched to actual '{2}'.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 400,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementClassNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Element {0}: expected class '{1}' not found.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 410,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementAttributeNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Element {0}: expected attribute '{1}' not matched to expected '{2}', actual='{3}'.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 420,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~IdLowerCase~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~id~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 430,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~JscriptCommand~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~GetElementSetIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~document.getElementById('{0}').selectedIndex={1};~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 440,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 50".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~JscriptCommand~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementFireOnChange~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~document.getElementById('{0}').onchange();~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 450,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 50".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~JscriptCommand~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementGetOptionText~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~var cbo = document.getElementById('{0}'); return cbo.options[{1}].text;~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 460,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 50".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ClassAttribute~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~class~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 470,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ClassNameFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Element {0}: expected class '{1}' is found.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 480,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NavigateToUrlMessage~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Navigate to URL: {0}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 490,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DistrictDash~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~District-~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 500,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchHyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Search-Hyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 510,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DistrictHyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~District-Hyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 520,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~WaitForNavigation~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~WaitForNavigation~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 530,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~WaitForElementExist~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~WaitForElementExist~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 540,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Click~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Click~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 550,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ClickElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ClickElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 560,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetControlValue~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~SetControlValue~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 570,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~GetElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~GetElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 580,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetComboIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~SetComboIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 590,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~WebNavInstructionMessage~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Name:= {0}, FriendlyName:= {1}, Value:= {2}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 600,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~IdProperCase~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Id~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 610,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~XPath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~XPath~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 620,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~JscriptCommand~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ControlSetValue~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~document.getElementById('{0}').value='{1}'~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 630,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 50".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Password~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Password~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 640,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PasswordMask~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~xxxxxxxxx~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 650,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SettingControlValue~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ ... Setting value - {0} := {1}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 660,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~JscriptCommand~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ClickElementJs~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~document.getElementById('{0}').click();~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 670,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 50".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ClickingOnElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ ... Click element - {0} ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 680,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DateFiledOnTextBox~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Date-Filed-On-TextBox~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 690,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~OpenHtmlTag~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~<{0}>~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 700,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CloseHtmlTag~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~</{0}>~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 710,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ImageOpenTag~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~<img~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 720,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ImageCloseTag~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~>~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 730,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseDataXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~results/result[@name='casedata']~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 740,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NavigationControlFile~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~navigation.control.file~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 750,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CollinCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~collinCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 760,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseTypeSelectedIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~caseTypeSelectedIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 770,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchTypeSelectedIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~searchTypeSelectedIndex~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 780,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SetSelectValue~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~set-select-value~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 790,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ActionName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchTypeHyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~search-type-hyperlink~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 800,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 30".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CriminalLinkXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~//a[@class = 'ssBlackNavBarHyperlink'][contains(text(),'Criminal')]~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 810,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ProbateLinkXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~//a[@class = 'ssBlackNavBarHyperlink'][contains(text(),'Probate')]~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 820,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseStlyeBoldXpath~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~/html/body/table[3]/tbody/tr/td[1]/b~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 830,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~IsCriminalSearch~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~isCriminalSearch~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 840,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~BaseUri~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~baseUri~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 850,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Query~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~query~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 860,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~QueryString~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~{0}?{1}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 870,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NumberOne~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~1~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 880,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NumberZero~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~0~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 890,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NonAddressZipCode~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~00000~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 900,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NonAddressLine1~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~No Address Found~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 910,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NonAddressLine2~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Not, Available 00000~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 920,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NavigationFileNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Unable to find navigation json~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 930,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchSettingFileNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Unable to find search setings access json~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 940,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchRecordCount~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Search found {0} records.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 950,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NameProperCase~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Name~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 960,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartingFetchRequest~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Starting fetch request: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 970,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~EndingFetchRequest~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Ending fetch request: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 980,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DashedLine~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~- - - - - - - - - - - - - - - - - - - - - - - - - ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 990,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~GeneralLongDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~MM/dd/yyyy HH:mm:ss~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1000,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartDateLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Start Date: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1010,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~EndDateLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~End Date: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1020,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~WebsiteLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Website: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1030,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FileNotFoundError~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~File not found error.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1040,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DataSourceNotFoundError~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Data source file not found error.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1050,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ExcelSourceNotFoundError~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Excel source file not found error.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1060,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SpaceDashSpaceElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ - {0} ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1070,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CriminalCivilAndFamily~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Criminal,Civil and Family~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1080,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~JpCountyCourts~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~JP - County Courts~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1090,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DistrictCourts~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~District Courts~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1100,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchColonSpaceElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Search: {0}.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1110,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DentonDistrictCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~dentonDistrictCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1120,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DentonCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~dentonCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1130,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~TarrantCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~tarrantCountyCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1140,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~ParameterName~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CollinCountyUserMap~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~collinCountyUserMap~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1150,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 20".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementPipeElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~{0}|{1}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1160,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~Error~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Error~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1170,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormContextId~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~form-context-id~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1180,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormStartDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~form-start-date~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1190,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormEndDate~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~form-end-date~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1200,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 1".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~EndTime~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ End time: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1210,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartTime~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~ Start time: ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1220,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseChooseWebsite~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please choose a website~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1230,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DataValidationError~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Data Validation Error~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1240,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseCheckStartAndEndDates~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please check start/end dates. Start date must be less than End Date.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1250,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseCheckStartEndRange~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please check start/end dates. ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1260,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~StartDateToEndDateRange~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Start date - End Date Date Range ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1270,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~RangeExceedsMaximunDays~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~exceeds maximum of ({0}) days.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1280,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DistrictKeyWord~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~District~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1290,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseChooseValidCaseType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please choose a valid case type. ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1300,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseChooseValidCaseSearchType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please choose a valid case search type. ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1310,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseChooseValidCourt~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please choose a valid court. ~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1320,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DateRangeMaxDays~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~dateRangeMaxDays~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1330,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CustomSearchLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Custom Search~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1340,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SearchTypeLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Search Type~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1350,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~SettingsLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Settings~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1360,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PasswordLabel~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Password~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1370,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormNameCredentials~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Credentials~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1380,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormNameMain~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Main~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1390,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FutureKeyWord~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Future~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1400,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~TarrantCountyCustomType~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~tarrantCountyCustomType~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1410,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DefaultKeyWord~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Default~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1420,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormNameDenton~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Denton~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1430,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormNameMdi~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~mdi~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1440,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~JpKeyword~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~JP~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1450,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ChromeDriver~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~chromedriver,geckodriver,microsoftwebdriver~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1460,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~NoDataFoundFromCaseExtract~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~No data found from case extract.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1470,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~CaseExtractCompleteWouldYouLikeToView~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Your data extract has completed. Would you like to view in Excel?~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1480,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DataExtractSuccess~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Data extract success~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1490,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~UnexpectedErrorOccurred~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~An unexpected error occurred.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1500,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~DataNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Data Not Found~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1510,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~PleaseCheckSourceDataNotFound~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Please check data extract. No source data has been found for export.~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1520,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ElementSpaceDashSpaceElement~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~{0} - {1}~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1530,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~TextAndAllFilesFilter~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~Text Files (*.txt)|*.txt|All Files (*.*)|*.*~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1540,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~FormStartup~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~form-startup~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1550,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ExtensionXml~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~.xml~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1560,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ExtensionXlsm~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~.xlsm~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1570,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    },".Replace(tilde, quote));
            sb.AppendLine("    {".Replace(tilde, quote));
            sb.AppendLine("      ~type~: ~FormatString~,".Replace(tilde, quote));
            sb.AppendLine("      ~name~: ~ExtensionXlsx~,".Replace(tilde, quote));
            sb.AppendLine("      ~value~: ~.xlsx~,".Replace(tilde, quote));
            sb.AppendLine("      ~keyIndex~: 1575,".Replace(tilde, quote));
            sb.AppendLine("      ~id~: 40".Replace(tilde, quote));
            sb.AppendLine("    }".Replace(tilde, quote));
            sb.AppendLine("  ]".Replace(tilde, quote));
            sb.AppendLine("}".Replace(tilde, quote));

            return sb.ToString();
        }
    }
}