name: "CQ : Build and Test : Email Component"

on:
  push:
    branches:
      - "**"
      - "!main"
      - "!releases"
    paths:
      - "src/email/**"

  pull_request:
    types: [opened, reopened]
    paths:
      - "src/email/**"

env:
  LEGALLEAD_EMAIL_TOKEN: ${{ secrets.SES_SECRET }}
  LEGALLEAD_EMAIL_USER: ${{ secrets.SES_USER }}
  SOLUTION_NAME: ${{ github.workspace }}\src\email\legallead.email.sln
  COVERAGE_NAME: ${{ github.workspace }}\src\email\tests.runsettings
  NET_VERSION: "8.0.x"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: dotnet restore ${{ env.SOLUTION_NAME }}
        id: dotnet-restore
        name: DotNet Restore

      - run: dotnet build ${{ env.SOLUTION_NAME }} --no-restore
        id: dotnet-build
        name: DotNet Build

      - run: dotnet test ${{ env.SOLUTION_NAME }} --no-build --logger trx --results-directory "TestResults-${{ env.NET_VERSION }}"
        id: dotnet-test
        name: DotNet Test

      - run: dotnet test ${{ env.SOLUTION_NAME }} --no-build --settings ${{ env.COVERAGE_NAME }}
        id: dotnet-test-coverage
        name: DotNet Test Coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: '**/TestResults/**/coverage.cobertura.xml'
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Write to Job Summary
        shell: bash
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-email-component-results.md

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: dotnet-results-email-${{ env.NET_VERSION }}
          path: TestResults-${{ env.NET_VERSION }}

      - name: Summarize Test Results
        shell: pwsh
        if: ${{ always() }}
        run: |
          & ./pipeline-summarize-tests.ps1 -workingDir "${{ github.workspace }}"
