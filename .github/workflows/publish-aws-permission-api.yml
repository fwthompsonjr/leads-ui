name: "Deploy: Permissions.Api"
env:
  PRJ_PATTERN: "*.permissions.api.csproj"
  PRJ_NAME: "legallead.permissions.api.zip"
  PRJ_BUCKET: "s3://legal-lead-permissions-bucket/"
  PRJ_BUCKET_NAME: "legal-lead-permissions-bucket"
  AWS_NAME: "legalleadpermissionsapi"
  AWS_ENV: "legalleadpermissionsapi-dev"
  AWS_REGION: "us-east-2"
  
on:
  push:
    paths:
      - 'release/legallead.permissions.api.release.txt'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Set Release Version
      run: |
          echo "BUILD_VERSION=${{format('{0}.{1}', vars.LEGALLEAD_VERSION_PREFIX, github.run_number)}}" >> $GITHUB_ENV

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Set outputs
      id: commitindex
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Extract branch name
      id: branchname
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

    - name: Restore Packages
      timeout-minutes: 10
      shell: pwsh
      run: |
        & ./pipeline-restore-packages.ps1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to AWS
      timeout-minutes: 15
      shell: pwsh
      run: |
        & ./pipeline-aws-deploy-project.ps1 -searchPattern "${{ env.PRJ_PATTERN }}" -versionLabel "v-${{ env.BUILD_VERSION }}-${{ steps.commitindex.outputs.sha_short }}"