# This workflow will build a .NET framework project(s)
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CQ .NET Framework
on:
  push:
    branches:  
      - '**'        # matches every branch
      - '!main'   # excludes master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y.%m.%d')" >> "$GITHUB_OUTPUT"
  
    - name: Set Release Version
      run: |
          echo "BUILD_VERSION=${{format('{0}.{1}', steps.date.outputs.date, github.run_number)}}" >> $GITHUB_ENV
  
    - name: Install Tools
      run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-coverage

    - uses: browser-actions/setup-chrome@v1
    - run: chrome --version
      if: github.event_name != 'pull_request'
    
    - uses: browser-actions/setup-firefox@v1
    - run: firefox --version
      if: github.event_name != 'pull_request'
  
    - name: Restore Packages
      if: github.event_name != 'pull_request'
      shell: pwsh
      run: |
        & ./pipeline-restore-packages.ps1

    - name: Build solution
      if: github.event_name != 'pull_request'
      shell: pwsh
      run: |
        & ./pipeline-build-solutions.ps1 -version "${{ env.BUILD_VERSION }}"

    - name: Test with dotnet
      if: github.event_name != 'pull_request'
      shell: pwsh
      run: |
        & ./pipeline-test-solutions.ps1 -workspace "${{ github.workspace }}"

    - name: Summarize Test Results
      if: github.event_name != 'pull_request'
      shell: pwsh
      run: |
        & ./pipeline-summarize-tests.ps1 -workingDir "${{ github.workspace }}"

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'